{
	"id": "e8577bf9-f975-429d-85d8-486102048761",
	"name": "User Story 6",
	"allTests": [],
	"timestamp": "2018-04-18T06:37:10.660Z",
	"collection_id": "4856c4b7-c323-4193-a443-6ee4c7303a2a",
	"folder_id": "51c45fb4-7c03-467c-aefa-9aedf332a0f4",
	"target_type": "folder",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "4856c4b7-c323-4193-a443-6ee4c7303a2a",
		"name": "CryptoLeague",
		"description": "",
		"auth": null,
		"events": [],
		"variables": [],
		"order": [],
		"folders_order": [
			"9041ee0b-109b-4adc-8e9c-eea705349dea",
			"c812e1e2-e03b-434d-a2ec-fd9d4a2af5e6",
			"556d0e53-635f-4c7a-bb7c-975d5826eac9",
			"2a5eec9a-121b-4bae-81f4-85182ce44ac6",
			"4242748e-054f-499f-9ff0-9c795e4ccc45",
			"51c45fb4-7c03-467c-aefa-9aedf332a0f4",
			"b95e9415-785a-40c4-92f5-8191f2783ea3"
		],
		"owner": "3846624",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": {
		"id": "51c45fb4-7c03-467c-aefa-9aedf332a0f4",
		"name": "User Story 6",
		"description": "",
		"auth": null,
		"events": null,
		"collection": "4856c4b7-c323-4193-a443-6ee4c7303a2a",
		"folder": null,
		"order": [
			"797b1397-955c-41ef-9ea8-7b209edf8c41",
			"0e0fae62-daca-4e69-9ad1-bec33d1f8c4f",
			"ce254021-8755-4ceb-8744-e8abe00da1ce"
		],
		"folders_order": [],
		"type": "folder",
		"depth": 1
	},
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "Valid Test",
			"id": "797b1397-955c-41ef-9ea8-7b209edf8c41",
			"url": "http://localhost:3000/user/BobbyG",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response should be ok to process": true,
				"The user body is valid": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 1,
					"fail": 0
				},
				"response should be ok to process": {
					"pass": 1,
					"fail": 0
				},
				"The user body is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"387"
			],
			"allTests": [
				{
					"response is ok": true,
					"response should be ok to process": true,
					"The user body is valid": true
				}
			],
			"time": "387",
			"totalRequestTime": "387",
			"iterationResults": {}
		},
		{
			"name": "Validate User JWT",
			"id": "0e0fae62-daca-4e69-9ad1-bec33d1f8c4f",
			"url": "http://localhost:3000/user/BobbyG",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Schema is valid": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"406"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Schema is valid": true
				}
			],
			"time": "406",
			"totalRequestTime": "406",
			"iterationResults": {}
		},
		{
			"name": "Invalid User JWT",
			"id": "ce254021-8755-4ceb-8744-e8abe00da1ce",
			"url": "http://localhost:3000/user/BobbyG",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status code is 401",
				"status": "pass",
				"Schema is valid": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"15"
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Schema is valid": true
				}
			],
			"time": "15",
			"totalRequestTime": "15",
			"iterationResults": {}
		}
	],
	"totalPass": 7,
	"totalFail": 0,
	"totalTime": 808,
	"lifecycle": "done",
	"requests": [
		{
			"name": "Valid Test",
			"id": "797b1397-955c-41ef-9ea8-7b209edf8c41",
			"url": "http://localhost:3000/user/BobbyG",
			"time": "2018-04-18T06:37:10.660Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 1,
					"fail": 0
				},
				"response should be ok to process": {
					"pass": 1,
					"fail": 0
				},
				"The user body is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Validate User JWT",
			"id": "0e0fae62-daca-4e69-9ad1-bec33d1f8c4f",
			"url": "http://localhost:3000/user/BobbyG",
			"time": "2018-04-18T06:37:10.660Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Invalid User JWT",
			"id": "ce254021-8755-4ceb-8744-e8abe00da1ce",
			"url": "http://localhost:3000/user/BobbyG",
			"time": "2018-04-18T06:37:10.660Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}